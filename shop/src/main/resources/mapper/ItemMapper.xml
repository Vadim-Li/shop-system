<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vadimli.mapper.ItemMapper">
    <resultMap id="BaseResultMap" type="com.vadimli.domain.Item">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="market_price" property="marketPrice" jdbcType="DOUBLE"/>
        <result column="shop_price" property="shopPrice" jdbcType="DOUBLE"/>
        <result column="num" property="num" jdbcType="INTEGER"/>
        <result column="image" property="image" jdbcType="VARCHAR"/>
        <result column="idesc" property="idesc" jdbcType="VARCHAR"/>
        <result column="iflag" property="iflag" jdbcType="TINYINT"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="cid" property="cid" jdbcType="INTEGER"/>
        <result column="uid" property="uid" jdbcType="INTEGER"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from item
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insertItem" parameterType="com.vadimli.domain.Item">
        insert into item (id, name, market_price,
                          shop_price, num, image,
                          idesc, iflag, status,
                          create_time, update_time, cid, uid)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{marketPrice,jdbcType=DOUBLE},
                #{shopPrice,jdbcType=DOUBLE}, #{num,jdbcType=INTEGER}, #{image,jdbcType=VARCHAR},
                #{idesc,jdbcType=VARCHAR}, #{iflag,jdbcType=TINYINT}, #{status,jdbcType=TINYINT},
                #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{cid,jdbcType=INTEGER},
                #{uid,jdbcType=INTEGER})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.vadimli.domain.Item">
        update item
        <set>
            name = #{name,jdbcType=VARCHAR},
            market_price = #{marketPrice,jdbcType=DOUBLE},
            shop_price = #{shopPrice,jdbcType=DOUBLE},
            num = #{num,jdbcType=INTEGER},
            image = #{image,jdbcType=VARCHAR},
            idesc = #{idesc,jdbcType=VARCHAR},
            iflag = #{iflag,jdbcType=TINYINT},
            status = #{status,jdbcType=TINYINT},
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            cid = #{cid,jdbcType=INTEGER},
            <if test="uid != null">
                uid = #{uid,jdbcType=INTEGER}
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" resultMap="allItemAndUserResultMap">
        select *
        from item
                 INNER JOIN user
                            ON item.uid = user.uid
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="allItemAndUserResultMap">
        SELECT *
        FROM item
                 INNER JOIN user
                            ON item.uid = user.uid
    </select>
    <!--根据iflag 查询 热门 和优惠商品 -->
    <select id="selectByIflag" resultMap="BaseResultMap" parameterType="int">
        SELECT id,
               name,
               market_price,
               shop_price,
               num,
               image,
               idesc,
               iflag,
               status,
               create_time,
               update_time,
               cid,
               uid
        FROM item
        WHERE iflag = #{iflag}
          AND STATUS = 1
        ORDER BY create_time DESC LIMIT 6;
    </select>

    <!-- 根据商品分类cid查询商品 -->
    <select id="selectByCid" resultMap="BaseResultMap" parameterType="int">
        SELECT id,
               NAME,
               market_price,
               shop_price,
               num,
               image,
               idesc,
               iflag,
               STATUS,
               create_time,
               update_time,
               cid,
               uid
        FROM item
        WHERE cid = #{cid}
          AND STATUS = 1
    </select>

    <!--List<Item> selectByUid(int uid);-->
    <select id="selectByUid" resultMap="allItemAndUserResultMap">
        SELECT *
        FROM item
                 INNER JOIN user
                            ON item.uid = user.uid
        WHERE item.uid = #{uid}
        /*AND STATUS = 1*/
    </select>
    <resultMap id="allItemAndUserResultMap" type="com.vadimli.domain.Item">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="market_price" property="marketPrice" jdbcType="DOUBLE"/>
        <result column="shop_price" property="shopPrice" jdbcType="DOUBLE"/>
        <result column="num" property="num" jdbcType="INTEGER"/>
        <result column="image" property="image" jdbcType="VARCHAR"/>
        <result column="idesc" property="idesc" jdbcType="VARCHAR"/>
        <result column="iflag" property="iflag" jdbcType="TINYINT"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="cid" property="cid" jdbcType="INTEGER"/>
        <result column="uid" property="uid" jdbcType="INTEGER"/>
        <collection property="user" ofType="com.vadimli.domain.User">
            <id column="uid" property="uid" jdbcType="INTEGER"/>
            <result column="username" property="username" jdbcType="VARCHAR"/>
            <result column="password" property="password" jdbcType="VARCHAR"/>
            <result column="name" property="name" jdbcType="VARCHAR"/>
            <result column="email" property="email" jdbcType="VARCHAR"/>
            <result column="telephone" property="telephone" jdbcType="VARCHAR"/>
            <result column="role" property="role" jdbcType="INTEGER"/>
        </collection>
    </resultMap>

    <!--List<Item> getItemByLike(@Param("mohu") String mohu);-->
    <select id="getItemByLike" resultMap="BaseResultMap">
        select *
        from item
        where name like '%${mohu}%'
    </select>
    <select id="getItemByUserByLike" resultMap="allItemAndUserResultMap">
        select *
        from item
        INNER JOIN user
        ON item.uid = user.uid
        <where>
            <if test="role == 2">
                AND item.uid = #{userId}
            </if>
            AND item.name like '%${mohu}%'
        </where>
    </select>


    <!--List<Item> getItemByUser(int uid);-->
    <select id="getItemByUser" resultMap="allItemAndCartResultMap">
        SELECT *
        FROM item
                 INNER JOIN cart
                            ON item.id = cart.id
        WHERE cart.uid = #{uid}
    </select>
    <resultMap id="allItemAndCartResultMap" type="com.vadimli.domain.Item">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="market_price" property="marketPrice" jdbcType="DOUBLE"/>
        <result column="shop_price" property="shopPrice" jdbcType="DOUBLE"/>
        <result column="num" property="num" jdbcType="INTEGER"/>
        <result column="image" property="image" jdbcType="VARCHAR"/>
        <result column="idesc" property="idesc" jdbcType="VARCHAR"/>
        <result column="iflag" property="iflag" jdbcType="TINYINT"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="cid" property="cid" jdbcType="INTEGER"/>
        <collection property="cart" ofType="com.vadimli.domain.Cart">
            <id column="cartId" property="cartId"></id>
            <result column="uid" property="uid"></result>
            <result column="id" property="id"></result>
            <result column="count" property="count"></result>
        </collection>
    </resultMap>
</mapper>